from keras.models import Sequential 
from keras.layers import Conv2D, MaxPooling2D 
from keras.layers import Activation, Dropout, Flatten, Dense
from keras.preprocessing.image import ImageDataGenerator 
from keras import applications 
import h5py

# This is the augmentation configuration we will use for training
train_datagen = ImageDataGenerator(
        rescale=1./255,
        shear_range=0.2,
        zoom_range=0.2,
        horizontal_flip=True)

# This is the augmentation configuration we will use for testing:
# Only rescaling
test_datagen = ImageDataGenerator(rescale=1./255)

# This is a generator that will read pictures found in subfolers of 'data/train', and indefinitely generate batches of augmented image data
train_generator = train_datagen.flow_from_directory(
        'FoodDataset/Images/SplitData/TrainingData',  # This is the target directory
        target_size=(150, 150),  # All images will be resized to 150x150
        batch_size=16,
        class_mode='categorical')  # Since we use categorical_crossentropy loss, we need categorical labels

# This is a similar generator, for validation data
validation_generator = test_datagen.flow_from_directory(
        'FoodDataset/Images/SplitData/ValidationData',
        target_size=(150, 150),
        batch_size=16,
        class_mode='categorical')
		
model = Sequential()
model.add(Flatten(input_shape=(150,150,3)))
model.add(Dense(256, activation='relu'))
model.add(Dense(256, activation='relu'))
model.add(Dense(10, activation='softmax' ))

model.compile(loss='categorical_crossentropy',
              optimizer='rmsprop',
              metrics=['accuracy'])
			  
model.load_weights("FFTesting.h5")

# This is a generator for test data
test_generator = test_datagen.flow_from_directory(
        'FoodDataset/Images/SplitData/TestingData',
        target_size=(150, 150),
        batch_size=16,
        class_mode='categorical')

filenames = test_generator.filenames
nb_samples = len(filenames)

accuracy = model.evaluate_generator(test_generator)
print accuracy
